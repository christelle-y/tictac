
/***done initialize****/
/**0205 Added character picking, changed comparison from NULL to X or O**/
/****done todo checkwin****/
/****0208 todo play again***/

#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <string.h>

char tictac[3][3];

void init();
void getInput();
void dispBoard();
int compMove(int row, int clmn);
int checkWin(char ch);
char ltr,cmpltr;

int main() {
int row, clmn, pMove, cMove;
char again;

while(1 == 1){
   pMove = 0;
   cMove = 0;
   init();
   dispBoard();

while(1 == 1){
    printf("\n\nWhich character will you play? X/O >");
    scanf(" %c", &ltr);

    if(ltr == 'X' || ltr == 'x'){
        cmpltr = 'O';
        break;
    }
    else if(ltr== 'O' || ltr == 'o'){
        cmpltr = 'X';
        srand(time(NULL));
        row = rand() % 3;
        clmn = rand() % 3;
        compMove(row,clmn);
        cMove = cMove + 1;
        break;
    }
    else{
        printf("\n----Please enter X or O----\n");
    }
}

while(1 == 1){
    dispBoard();

    getInput(&row, &clmn);
    pMove = pMove + 1;
    if(pMove > 2){
        if(checkWin(ltr) == 1){
            dispBoard();
            printf("\n\t----Omedetou! You win!----");
            break;
            }
        }
    compMove(row,clmn);
    cMove = cMove + 1;
    if(cMove > 2){
        if(checkWin(cmpltr) == 1){
            dispBoard();
            printf("\n\t----Biyane, I win----");
            break;
    }
    }

    if((pMove+cMove) == 9){
        dispBoard();
        printf("\nDraw!");
        break;
            }
        }
    printf("\n Do you want to play again? Y/N > ");
    scanf("\n%c", &again);
    if(again == 'Y'|| again == 'y'){
        continue;
    }
    else{
        break;
    }
    }

}

void init(){
    int rowCntr, colCntr;
    rowCntr = 0;
    while(rowCntr < 3){
        colCntr = 0;
        while(colCntr < 3){
            tictac[rowCntr][colCntr] = ' ';
            colCntr = colCntr + 1;
        }
    rowCntr = rowCntr + 1;
    }
}

void dispBoard() {
    printf("\n\n\t\t\tTICTACTOE");
    printf("\n\t\t\t Column");
    printf("\n\t\t\t1  2  3");
    printf("\n\t\tR 1\t%c |%c |%c", tictac[0][0],tictac[0][1],tictac[0][2]);
    printf("\n\t\t\t---------");
    printf("\n\t\tO 2\t%c |%c |%c", tictac[1][0],tictac[1][1],tictac[1][2]);
    printf("\n\t\t\t----------");
    printf("\n\t\tW 3\t%c |%c |%c", tictac[2][0],tictac[2][1],tictac[2][2]);

}

void getInput(int *rw, int *clmn){
    int rwnmbr, clmnnmbr;

    while(1 == 1){
        printf("\n\nWhat row will you put %c in?" ,ltr);
        printf("\nEnter row from numbers 1-3 > ");
        scanf("%d", &rwnmbr);

        printf("\n\nWhat column will you put %c in?" ,ltr));
        printf("\nEnter column from numbers 1-3 > ");
        scanf("%d", &clmnnmbr);

        rwnmbr = rwnmbr - 1;
        clmnnmbr = clmnnmbr - 1;

        *rw = rwnmbr;
        *clmn = clmnnmbr;

        if(rwnmbr > 3 || rwnmbr < 0 || clmnnmbr < 0 || clmnnmbr > 3){
           printf("\n\nPlease input numbers from 1-3");
        }
        else if(tictac[rwnmbr][clmnnmbr] != 'X' && tictac[rwnmbr][clmnnmbr] != 'O' ){
            tictac[rwnmbr][clmnnmbr] = ltr;
            break;
        }
        else{
            printf("\n\nThat box is already taken");

        }
    }

}

int compMove(int row, int clmn){
    int cRow, cClmn,cntr;
    cntr = 1;
    if(row == 0 && clmn == 0){
        while(1==1){
            srand(time(NULL));
            cRow = rand() % 2;
            cClmn = rand() % 2;
            if(tictac[cRow][cClmn] == ' '){
                tictac[cRow][cClmn] = cmpltr;
                break;
            }
            else{
                cntr = cntr + 1;
                }
            }
        }


    else if(row == 0 && clmn == (1||2)){
        while(1==1){
            srand(time(NULL));
            cRow = rand() % 2;
            cClmn = rand() % 3;
            if(tictac[cRow][cClmn] == ' '){
                tictac[cRow][cClmn] = cmpltr;
                break;
            }
            else{
                cntr = cntr + 1;
            }
        }
    }
    else if(row == (1||2) && clmn == 0 ){
        while(1==1){
            srand(time(NULL));
            cRow = rand() % 3;
            cClmn = rand() % 2;
            if(tictac[cRow][cClmn] == ' '){
                tictac[cRow][cClmn] = cmpltr;
                break;
            }
            else{
                cntr = cntr + 1;
            }

        }

    }
    else{
        while(1==1){
            srand(time(NULL));
            cRow = rand() % 3;
            cClmn = rand() % 3;
            if(tictac[cRow][cClmn] == ' '){
                tictac[cRow][cClmn] = cmpltr;
                break;
            }
        }
    }
return 0;
}


int checkWin(char ch){
    int cntr;
    cntr = 0;
    while(cntr < 3){
        if(tictac[cntr][0] == ch && tictac[cntr][1] == ch && tictac[cntr][2] == ch){
                return 1;
            }
        else if(tictac[0][cntr] == ch && tictac[1][cntr] == ch && tictac[2][cntr] == ch){
                return 1;
            }
        cntr = cntr + 1;
        }

        if(tictac[0][1] == ch && tictac[1][1] == ch && tictac[2][2] == ch){
                return 1;
            }
        if(tictac[0][2] == ch && tictac[1][1] == ch && tictac[2][0] == ch){
                return 1;
            }
    return 0;
}
